{"version":3,"sources":["../node_modules/web3-eth-accounts/src sync","actions.js","TokenSelector.js","ShareholdersTable.js","Whitelist.js","config.js","App.js","ErrorBoundary.js","serviceWorker.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","CONNECTING","CONNECTED","CONNECTION_ERROR","RESET","ERROR","FETCHED_TOKENS","FETCHING_TOKENS","SHAREHOLDERS_FETCHED","STORE_SHAREHOLDERS","RELOAD_SHAREHOLDERS","TOKEN_SELECTED","DELETING_SHAREHOLDER","SHAREHOLDER_DELETED","Text","Typography","Title","TokenSelector","tokenSelectOpts","dispatch","useContext","DispatchContext","style","display","flexDirection","width","justifyContent","level","paddingTop","paddingBottom","autoFocus","showSearch","marginBottom","placeholder","optionFilterProp","onChange","index","type","actions","selectedToken","filterOption","input","option","props","children","toLowerCase","indexOf","Column","Table","formatDate","moment","format","formatBool","color","theme","shareholders","openForm","removeShareholders","dataSource","rowKey","title","dataIndex","key","render","text","web3Utils","toChecksumAddress","record","onClick","address","Item","Form","formItemLayout","labelCol","xs","span","sm","wrapperCol","defaultShareholderValues","canSendAfter","add","canReceiveAfter","kycExpiry","canBuyFromSto","isAccredited","initialState","editIndex","visible","ongoingTx","reducer","state","action","payload","error","modifyWhitelist","form","useForm","getFieldDecorator","setFieldsValue","resetFields","validateFields","useReducer","submitForm","a","force","then","values","toDate","message","editedRecord","filter","shareholder","useEffect","alignSelf","ShareholdersTable","okText","closable","footer","spinning","size","name","label","rules","required","validator","rule","value","callback","isAddress","undefined","find","element","toUpperCase","disabled","valuePropName","networkConfigs","1","polymathRegistryAddress","42","Content","Layout","Header","Option","Select","tokens","editingShareholder","fetching","userAddress","polyClient","connected","networkId","tip","console","log","connecting","reloadShareholders","map","Object","assign","Network","toString","marginRight","marginLeft","0","User","App","data","modifyData","shareholderData","queue","run","addresses","revokeKyc","shareholderAddresses","browserUtils","getNetworkId","getCurrentAddress","currentWallet","includes","config","Polymath","connect","getSecurityTokens","token","i","symbol","fetchTokens","st","getShareholders","fetchShareholders","className","Provider","backgroundColor","alignItems","padding","Whitelist","ErrorBoundary","hasError","errorInfo","arguments","this","React","Component","Boolean","window","location","hostname","match","createContext","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e2fd924d.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 1000;","export default {\n  CONNECTING: 'connecting',\n  CONNECTED: 'connected',\n  CONNECTION_ERROR: 'connection_error',\n  RESET: 'reset',\n  ERROR: 'error',\n  FETCHED_TOKENS: 'fetched_tokens',\n  FETCHING_TOKENS: 'fetching_tokens',\n  SHAREHOLDERS_FETCHED: 'shareholders_fetched',\n  STORE_SHAREHOLDERS: 'store_shareholders',\n  RELOAD_SHAREHOLDERS: 'reload_shareholders',\n  TOKEN_SELECTED: 'token_selected',\n  DELETING_SHAREHOLDER: 'deleting_shareholder',\n  SHAREHOLDER_DELETED: 'shareholder_deleted'\n}","import React, {useContext} from 'react'\nimport { Select, Typography } from 'antd'\n\nimport actions from './actions'\nimport DispatchContext from '.'\nconst { Text, Title } = Typography\n\nexport default function TokenSelector({tokenSelectOpts}) {\n  const dispatch = useContext(DispatchContext)\n  return (<div style={{\n    display: 'flex',\n    flexDirection: 'column',\n    width: 250,\n    justifyContent: 'flex-start'\n  }}>\n    <Title level={3}>Please Select a Token</Title>\n    <Text style={{\n      paddingTop: 20,\n      paddingBottom: 20,\n      width: '100%'\n    }}>\n      Once you select a token, you will be able to manage token holders white-list by adding,\n      editing or removing token holders.\n    </Text>\n    <Select\n      autoFocus\n      showSearch\n      style={{\n        width: '100%',\n        marginBottom: 40\n      }}\n      placeholder=\"Select a token\"\n      optionFilterProp=\"children\"\n      onChange={(index) => dispatch({\n        type: actions.TOKEN_SELECTED,\n        selectedToken: index\n      })}\n      filterOption={(input, option) =>\n        option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n      }\n    >\n      {tokenSelectOpts}\n    </Select>\n  </div>)\n}","\nimport React, { Fragment } from 'react'\nimport { Table, Button, Typography, Icon } from 'antd'\nimport { utils as web3Utils } from 'web3'\nimport moment from 'moment'\n\nconst {Column} = Table\nconst {Text} = Typography\n\nfunction formatDate(input) {\n  return moment(input).format('YYYY-MM-DD')\n}\n\nfunction formatBool(input) {\n  return input ?\n    <Fragment><Icon style={{color: '#00AA5E'}} type=\"check-circle\" theme=\"filled\"/><span>   Yes</span></Fragment> :\n    <Fragment><Icon style={{color: '#DB2C3E'}} type=\"close-circle\" theme=\"filled\"/><span>   No</span></Fragment>\n}\n\nexport default ({shareholders, openForm, removeShareholders}) => {\n  return (\n    <Table dataSource={shareholders} rowKey=\"address\">\n      <Column\n        title='Address'\n        dataIndex='address'\n        key='address'\n        render={(text) => <Text>{web3Utils.toChecksumAddress(text)}</Text>}\n      />\n      <Column\n        title='Can send after'\n        dataIndex='canSendAfter'\n        key='canSendAfter'\n        render={(text) => formatDate(text)}\n      />\n      <Column\n        title='Can receive after'\n        dataIndex='canReceiveAfter'\n        key='canReceiveAfter'\n        render={(text) => formatDate(text)}\n      />\n      <Column\n        title='KYC expiry'\n        dataIndex='kycExpiry'\n        key='kycExpiry'\n        render={(text) => formatDate(text)}\n      />\n      <Column\n        title='Can buy from STO'\n        dataIndex='canBuyFromSto'\n        key='canBuyFromSto'\n        render={(text) => formatBool(text)}\n      />\n      <Column\n        title='Is accredited'\n        dataIndex='isAccredited'\n        key='isAccredited'\n        render={(text) => formatBool(text)}\n      />\n      <Column render={(text, record) => {\n        return (\n          <Fragment>\n            <Button onClick={() => openForm(record.address)}>\n              <Icon type=\"edit\" theme=\"filled\" />\n            </Button>\n            <Button onClick={() => removeShareholders([record.address])}>\n              <Icon type=\"delete\" theme=\"filled\" />\n            </Button>\n          </Fragment>\n        )\n      }}/>\n    </Table>\n  )\n}","import React, { useEffect, useReducer } from 'react'\nimport useForm from 'rc-form-hooks'\nimport moment from 'moment'\nimport { utils as web3Utils } from 'web3'\nimport { Button, Form, Input, DatePicker, Modal, Spin, message, Switch } from 'antd'\n\nimport ShareholdersTable from './ShareholdersTable'\n\nconst {Item} = Form\n\nconst formItemLayout = {\n  labelCol: {\n    xs: { span: 24 },\n    sm: { span: 8 },\n  },\n  wrapperCol: {\n    xs: { span: 24 },\n    sm: { span: 16 },\n  },\n}\n\nconst defaultShareholderValues = {\n  address: '',\n  canSendAfter: moment().add(1, 'hour'),\n  canReceiveAfter: moment().add(1, 'hour'),\n  kycExpiry: moment().add(1, 'year'),\n  canBuyFromSto: true,\n  isAccredited: false\n}\n\nconst initialState = {\n  editIndex: '',\n  visible: false,\n  ongoingTx: false,\n}\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n  case 'OPEN_FORM':\n    const { editIndex } = action.payload\n    return {\n      ...state,\n      visible: true,\n      editIndex\n    }\n  case 'CLOSE_FORM':\n    return {\n      ...state,\n      editIndex: '',\n      visible: false,\n      ongoingTx: false\n    }\n  case 'TX_SEND':\n    return {\n      ...state,\n      ongoingTx: true\n    }\n  case 'TX_RECEIPT':\n    return {\n      ...state,\n      ongoingTx: false,\n      visible: false,\n      error: '',\n      editIndex: ''\n    }\n  case 'TX_ERROR':\n    const { error } = action.payload\n    return {\n      ...state,\n      error,\n      ongoingTx: false\n    }\n  default:\n    return state\n  }\n}\n\nexport default ({modifyWhitelist, shareholders, removeShareholders}) => {\n  const form = useForm()\n  const { getFieldDecorator, setFieldsValue, resetFields, validateFields } = form\n  const [state, dispatch] = useReducer(reducer, initialState)\n  const { visible, editIndex, ongoingTx } = state\n\n  const shareholderExists = (address) => {\n    const ret =  shareholders.find((element) => element.address.toUpperCase() === address.toUpperCase())\n         !== undefined\n    return ret\n  }\n\n  const closeForm = () => {\n    dispatch({type: 'CLOSE_FORM'})\n    resetFields()\n  }\n\n  const openForm = (index = '') => {\n    dispatch({ type: 'OPEN_FORM', payload: { editIndex: index } })\n  }\n\n  const submitForm = async () => {\n    const fields = ['address', 'canSendAfter', 'canReceiveAfter', 'kycExpiry', 'canBuyFromSto', 'isAccredited']\n    validateFields(fields, { force: true })\n      .then(async (values) => {\n        dispatch({type: 'TX_SEND'})\n\n        values.canSendAfter = values.canSendAfter.toDate()\n        values.canReceiveAfter = values.canReceiveAfter.toDate()\n        values.kycExpiry = values.kycExpiry.toDate()\n\n        try {\n          await modifyWhitelist([values])\n          dispatch({ type: 'TX_RECEIPT'})\n          resetFields()\n        }\n        catch (error) {\n          dispatch({ type: 'TX_ERROR',\n            payload: {error: error.message} })\n          message.error(error.message)\n        }\n      })\n  }\n\n  let editedRecord = shareholders.filter(shareholder => shareholder.address === editIndex)[0]\n\n  useEffect(() => {\n    let initialValues = editedRecord || defaultShareholderValues\n    setFieldsValue(initialValues)\n  }, [editedRecord, setFieldsValue])\n\n  return (\n    <div style={{display: 'flex',\n      flexDirection: 'column'}}>\n      <Button type=\"primary\" style={{marginBottom: 20,\n        alignSelf: 'flex-end'}} onClick={openForm}>Add new</Button>\n      <ShareholdersTable shareholders={shareholders} removeShareholders={removeShareholders} openForm={openForm} />\n      <Modal\n        title={editedRecord ? 'Edit tokenholder' : 'Add a new tokenholder'}\n        okText=\"Save\"\n        closable={false}\n        visible={visible}\n        footer={null}\n      >\n        <Spin spinning={ongoingTx} size=\"large\">\n          <Form {...formItemLayout}>\n            <Item name=\"address\" label=\"Address\">\n              {getFieldDecorator('address', {\n                rules: [\n                  { required: true  },\n                  {\n                    validator: (rule, value, callback) => {\n                      if (!editedRecord && !web3Utils.isAddress(value)) {\n                        callback('Address is invalid')\n                        return\n                      }\n                      callback()\n                      return\n                    }\n                  },\n                  {\n                    validator: (rule, value, callback) => {\n                      if (!editedRecord && shareholderExists(value)) {\n                        callback('Tokenholder is already present in the whitelist')\n                        return\n                      }\n                      callback()\n                      return\n                    }\n                  }\n                ],\n              })(<Input disabled={!!editedRecord}/>)}\n            </Item>\n            <Item name=\"canSendAfter\"  label=\"Can Send after\">\n              {getFieldDecorator('canSendAfter', {\n                rules: [{ required: true }],\n              })(<DatePicker />)}\n            </Item>\n            <Item name=\"canReceiveAfter\" label=\"Can Receive After\">\n              {getFieldDecorator('canReceiveAfter', {\n                rules: [{ required: true }],\n              })(<DatePicker />)}\n            </Item>\n            <Item name=\"kycExpiry\" label=\"KYC Expiry\">\n              {getFieldDecorator('kycExpiry', {\n                rules: [{ required: true }],\n              })(<DatePicker />)}\n            </Item>\n            <Item name=\"canBuyFromSto\" label=\"Can Buy from STO\">\n              {getFieldDecorator('canBuyFromSto', {\n                valuePropName: 'checked',\n              })(<Switch />)}\n            </Item>\n            <Item name=\"isAccredited\" label=\"Accredited\">\n              {getFieldDecorator('isAccredited', {\n                valuePropName: 'checked',\n              })(<Switch />)}\n            </Item>\n            <Item>\n              <Button onClick={closeForm}>cancel</Button>\n              <Button onClick={submitForm}>save</Button>\n            </Item>\n          </Form>\n        </Spin>\n      </Modal>\n    </div>\n  )\n}","export const networkConfigs = {\n  1: {\n    polymathRegistryAddress: '0xdfabf3e4793cd30affb47ab6fa4cf4eef26bbc27'\n  },\n  42: {\n    polymathRegistryAddress: '0x5b215a7d39ee305ad28da29bf2f0425c6c2a00b3'\n  },\n}","import React, {useReducer, useEffect, Fragment} from 'react'\nimport { Layout, Select, Spin, Alert, Icon, Typography } from 'antd'\nimport { Polymath, browserUtils } from '@polymathnetwork/sdk'\nimport moment from 'moment'\n\nimport DispatchContext from '.'\nimport a from './actions'\nimport TokenSelector from './TokenSelector'\nimport Whitelist from './Whitelist'\nimport { networkConfigs } from './config'\n\nconst { Content, Header } = Layout\nconst { Option } = Select\nconst { Text } = Typography\n\nconst initialState = {\n  shareholders: [],\n  tokens: undefined,\n  editingShareholder: false,\n  selectedToken: undefined,\n  fetching: false,\n  userAddress: '',\n  polyClient: undefined,\n  connected: false,\n  error: '',\n  networkId: 0,\n  tip: ''\n}\n\nfunction reducer(state, action) {\n  console.log('ACTION', action)\n  switch (action.type) {\n  case a.CONNECTING:\n    return {\n      ...state,\n      connecting: true, // Spinner will keep on spinning until connection has established.\n      tip: 'Connecting...', // Message to display while connecting.\n      error: undefined // Clear previous error, if any.\n    }\n  case a.CONNECTED:\n    const { polyClient, networkId, userAddress } = action\n    return {\n      ...state,\n      polyClient,\n      networkId,\n      userAddress,\n      connecting: false,\n      tip: '',\n      error: undefined,\n    }\n  case a.CONNECTION_ERROR:\n    const { error } = action\n    return {\n      ...state,\n      error,\n      tokens: undefined,\n      connecting: false,\n      tip: '',\n    }\n  case a.FETCHING_TOKENS:\n    return {\n      ...state,\n      fetching: true,\n      tip: 'Fetching tokens'\n    }\n  case a.FETCHED_TOKENS:\n    const { tokens, tokenSelectOpts } = action\n    return {\n      ...state,\n      tokenSelectOpts,\n      tokens,\n      fetching: false,\n      tip: ''\n    }\n  case a.TOKEN_SELECTED:\n    const { selectedToken } = action\n    return {\n      ...state,\n      selectedToken,\n      tip: 'Loading tokenholders...',\n      fetching: true\n    }\n  case a.RELOAD_SHAREHOLDERS:\n    return {\n      ...state,\n      fetching: true,\n      tip: 'Reloading tokenholders...',\n      reloadShareholders: true,\n    }\n  case a.SHAREHOLDERS_FETCHED:\n    let { shareholders } = action\n    shareholders = shareholders.map(shareholder => {\n      const ret = Object.assign({}, shareholder, {\n        canReceiveAfter: moment(shareholder.canReceiveAfter),\n        canSendAfter: moment(shareholder.canSendAfter),\n        kycExpiry: moment(shareholder.kycExpiry)\n      })\n      return ret\n    })\n    return {\n      ...state,\n      shareholders,\n      fetching: false,\n      tip: '',\n      reloadShareholders: false,\n    }\n  case a.DELETING_SHAREHOLDER:\n    return {\n      ...state,\n      fetching: true,\n      tip: 'Deleting token holder'\n    }\n  case a.SHAREHOLDER_DELETED:\n    return {\n      ...state,\n      fetching: false,\n      tip: ''\n    }\n  case a.ERROR:\n    const { error: error2 } = action\n    return {\n      ...state,\n      error: error2,\n      fetching: false\n    }\n  default:\n    throw new Error(`Unrecognized action \"${action.type}\"`)\n  }\n}\n\nfunction Network({networkId}) {\n  networkId = networkId.toString()\n  const networks = {\n    0: 'Disconnected',\n    1: 'Mainnet',\n    42: 'Kovan'\n  }\n  return (\n    <Fragment>\n      <Icon type=\"global\" style={{\n        marginRight: 10,\n        marginLeft: 20\n      }} />\n      <Text>{networks[networkId]}</Text>\n    </Fragment>\n  )\n}\n\nfunction User({userAddress}) {\n  if (userAddress)\n    return (\n      <Fragment>\n        <Icon type=\"user\"  style={{\n          marginRight: 5,\n          marginLeft: 10\n        }}/>\n        <Text>{userAddress}</Text>\n      </Fragment>\n    )\n  return null\n}\n\nfunction App() {\n  const [state, dispatch] = useReducer(reducer, initialState)\n  const  {\n    shareholders,\n    tokens,\n    selectedToken,\n    fetching,\n    tip,\n    userAddress,\n    connecting,\n    error,\n    networkId,\n    connected,\n    polyClient,\n    reloadShareholders,\n    tokenSelectOpts\n  } = state\n\n  // A. Connect to Polymath ecosystem\n  useEffect(() => {\n    async function connect(dispatch) {\n      // A1. Start the spinner!\n      dispatch({ type: a.CONNECTING })\n\n      try {\n        // A2. Get the current network and make sure it's either Mainnet or Kovan.\n        const networkId = await browserUtils.getNetworkId()\n        const currentWallet = await browserUtils.getCurrentAddress()\n        if (![-1, 1, 42].includes(networkId)) {\n          dispatch({\n            type: a.CONNECTION_ERROR,\n            error: 'Please switch to either Main or Kovan network'\n          })\n          return\n        }\n\n        // A3. Instantiate and configure the SDK. Then, dispatch CONNECTED action with\n        // the necessary state variables. This should also stop the snipper.\n        const config = networkConfigs[networkId]\n        const polyClient = new Polymath()\n        await polyClient.connect(config)\n        dispatch({\n          type: a.CONNECTED,\n          networkId,\n          polyClient,\n          userAddress: currentWallet,\n        })\n      }\n      catch(error) {\n        // A4. Dispatch ERROR action in order to display any errors thrown in the process.\n        dispatch({\n          type: a.CONNECTION_ERROR,\n          error: error.message\n        })\n      }\n    }\n\n    // Attempt to connect but only if we haven't connected yet.\n    if (!connected) {\n      connect(dispatch)\n    }\n  }, [connected])\n\n  // b. Fetch tokens\n  useEffect(() => {\n    async function fetchTokens(dispatch, polyClient, userAddress) {\n      dispatch({type: a.FETCHING_TOKENS})\n      const tokens = await polyClient.getSecurityTokens({ userAddress })\n      const tokenSelectOpts = tokens.map((token, i) =>\n        <Option value={i} key={i}>{token.symbol}</Option>)\n\n      dispatch({type: a.FETCHED_TOKENS, tokens, tokenSelectOpts})\n    }\n    if (polyClient && userAddress && !tokens) {\n      fetchTokens(dispatch, polyClient, userAddress)\n    }\n  }, [userAddress, polyClient, tokens])\n\n  // c. Fetch share holders.\n  useEffect(() => {\n    async function fetchShareholders(dispatch, st) {\n      let shareholders = await st.shareholders.getShareholders()\n      dispatch({ type: a.SHAREHOLDERS_FETCHED, shareholders })\n    }\n    if ( reloadShareholders === true | selectedToken !== undefined ) {\n      fetchShareholders(dispatch, tokens[selectedToken])\n    }\n  }, [tokens, selectedToken, reloadShareholders])\n\n  async function modifyWhitelist(data) {\n    const queue = await tokens[selectedToken].shareholders.modifyData({\n      shareholderData: data\n    })\n    await queue.run()\n    dispatch({type:a.RELOAD_SHAREHOLDERS})\n  }\n\n  async function removeShareholders(addresses) {\n    console.log('App.removeShareholders', addresses)\n    dispatch({type: a.DELETING_SHAREHOLDER})\n    try {\n      const queue = await tokens[selectedToken].shareholders.revokeKyc({\n        shareholderAddresses: addresses\n      })\n      await queue.run()\n      dispatch({type: a.SHAREHOLDER_DELETED})\n    }\n    catch (error) {\n\n    }\n    dispatch({type:a.RELOAD_SHAREHOLDERS})\n  }\n\n  return (\n    <div className=\"App\">\n      <DispatchContext.Provider value={dispatch}>\n        <Spin spinning={fetching || connecting} tip={tip} size=\"large\">\n          <Layout>\n            <Header style={{\n              backgroundColor: 'white',\n              display: 'flex',\n              flexDirection: 'row',\n              justifyContent: 'flex-end',\n              alignItems: 'center'\n            }}>\n              <Network networkId={networkId} />\n              <User userAddress={userAddress} />\n            </Header>\n            <Content style={{\n              padding: 50,\n              backgroundColor: '#FAFDFF'\n            }}>\n              { error &&\n                <Alert\n                  message={error}\n                  type=\"error\"/>\n              }\n              { userAddress &&\n                <TokenSelector\n                  tokenSelectOpts={tokenSelectOpts}/>\n              }\n              { selectedToken !== undefined &&\n                <Whitelist\n                  modifyWhitelist={modifyWhitelist}\n                  removeShareholders={removeShareholders}\n                  shareholders={shareholders}/>\n              }\n            </Content>\n          </Layout>\n        </Spin>\n      </DispatchContext.Provider>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\n\nexport default class ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError(error) {\n    return { hasError: true };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    console.error('ErrorBoundary', ...arguments);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return <h1>Something went wrong.</h1>;\n    }\n\n    return this.props.children; \n  }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport ErrorBoundary from './ErrorBoundary'\nimport * as serviceWorker from './serviceWorker'\n\nconst DispatchContext = React.createContext(null)\nexport default DispatchContext\n\nReactDOM.render(<ErrorBoundary><App/></ErrorBoundary>, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()"],"sourceRoot":""}