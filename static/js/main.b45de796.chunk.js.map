{"version":3,"sources":["ErrorBoundary.js","serviceWorker.js","index.js","App.js","Whitelist.js","config.js","actions.js","../node_modules/web3-eth-accounts/src sync"],"names":["ErrorBoundary","props","state","hasError","error","errorInfo","console","arguments","this","children","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","Content","Layout","Header","Option","Select","init","shareholders","tokens","undefined","editingShareholder","tokenIndex","fetching","userAddress","polyClient","connected","networkId","reducer","action","type","actions","CONNECTING","tip","connecting","CONNECTED","payload","CONNECTION_ERROR","TOKEN_SELECTED","SHAREHOLDERS_FETCHED","STORE_SHAREHOLDERS","map","shareholder","Object","assign","canReceiveAfter","moment","canSendAfter","kycExpiry","ERROR","RESET","Error","dispatch","a","browserUtils","getNetworkId","getCurrentAddress","currentWallet","includes","config","networkConfigs","Polymath","connect","getSecurityTokens","owner","message","fetchShareholders","st","getShareholders","Network","toString","style","marginRight","marginLeft","Text","0","1","42","User","useReducer","modifyData","shareholderData","queue","run","address","isAccredited","canBuyFromSto","useEffect","global","token","className","spinning","size","backgroundColor","display","flexDirection","justifyContent","alignItems","padding","width","Title","level","paddingTop","paddingBottom","autoFocus","showSearch","marginBottom","placeholder","optionFilterProp","onChange","index","filterOption","input","option","toLowerCase","indexOf","i","value","key","symbol","modifyWhitelist","deleteShareholders","Column","Table","Item","Form","Typography","formItemLayout","labelCol","xs","span","sm","wrapperCol","formatDate","format","formatBool","color","theme","defaultShareholderValues","add","WhitelistForm","create","name","visible","onCancel","onOk","form","awaitingConfirmation","editedRecord","shareholderExists","defaultValues","getFieldDecorator","title","okText","confirmLoading","label","rules","required","validator","rule","callback","web3Utils","isAddress","initialValue","disabled","valuePropName","Whitelist","editIndex","closeForm","setState","formRef","resetFields","openForm","submitForm","validateFields","err","values","toDate","saveFormRef","find","element","toUpperCase","filter","alignSelf","onClick","dataSource","rowKey","dataIndex","text","toChecksumAddress","record","wrappedComponentRef","polymathRegistryAddress","webpackEmptyContext","req","e","code","keys","resolve","module","exports","id"],"mappings":"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","file":"static/js/main.b45de796.chunk.js","sourcesContent":["import React from 'react';\n\nexport default class ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError(error) {\n    return { hasError: true };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    console.error('ErrorBoundary', ...arguments);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return <h1>Something went wrong.</h1>;\n    }\n\n    return this.props.children; \n  }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport ErrorBoundary from './ErrorBoundary'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<ErrorBoundary><App/></ErrorBoundary>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, {useReducer, useEffect, Fragment} from 'react';\nimport { Layout, Select, Spin, Alert, Icon, Typography } from 'antd';\nimport { Polymath, browserUtils } from '@polymathnetwork/sdk';\nimport moment from 'moment';\n\nimport actions from './actions';\nimport Whitelist from './Whitelist';\nimport { networkConfigs } from './config';\n\nconst { Content, Header } = Layout;\nconst { Option } = Select;\n\nfunction init() {\n  return {\n    shareholders: [],\n    tokens: undefined,\n    editingShareholder: false,\n    tokenIndex: undefined,\n    fetching: false,\n    userAddress: '',\n    polyClient: undefined,\n    connected: false,\n    error: '',\n    networkId: 0\n  };\n}\n\nfunction reducer(state, action) {\n  switch (action.type) {\n  case actions.CONNECTING:\n    return { \n      ...state,\n      tip: 'Connecting...',\n      connecting: true,\n      error: undefined\n    }\n  case actions.CONNECTED:\n    return { \n      ...state,\n      ...action.payload,\n      connecting: false,\n      tip: undefined,\n      error: undefined,\n    }\n  case actions.CONNECTION_ERROR:\n    const { error } = action.payload;\n    return {\n      ...state,\n      error,\n      connecting: false,\n    }\n  case actions.TOKEN_SELECTED:\n    const { tokenIndex } = action.payload\n    return { \n      ...state,\n      tokenIndex,\n      tip: 'Loading investors whitelist...',\n      fetching: true \n    }\n  case actions.SHAREHOLDERS_FETCHED:\n    return { \n      ...state,\n      fetching: false,\n      tip: undefined,\n    }\n  case actions.STORE_SHAREHOLDERS:\n    let { shareholders } = action.payload\n    shareholders = shareholders.map(shareholder => {\n      const ret = Object.assign({}, shareholder, {\n        canReceiveAfter: moment(shareholder.canReceiveAfter),\n        canSendAfter: moment(shareholder.canSendAfter),\n        kycExpiry: moment(shareholder.kycExpiry)\n      });\n      return ret;\n    });\n    return { ...state, shareholders };\n  case actions.ERROR:\n    return { ...state, fetching: false }\n  case actions.RESET:\n    return init();\n  default:\n    throw new Error(`Unrecognised action \"${action.type}\"`);\n  }\n}\n\nasync function connect(dispatch) {\n  dispatch({type: actions.CONNECTING});\n\n  try {\n    const networkId = await browserUtils.getNetworkId();\n    const currentWallet = await browserUtils.getCurrentAddress();\n    if (![-1, 1, 42].includes(networkId)) {\n      dispatch({ type: actions.CONNECTION_ERROR, payload: { error: 'Please switch to either Main or Kovan network' }})\n      return;\n    }\n\n    const config = networkConfigs[networkId];\n    const polyClient = new Polymath();\n    await polyClient.connect(config);\n    const tokens = await polyClient.getSecurityTokens({owner: currentWallet});\n\n    dispatch({type: actions.CONNECTED, payload: {\n      networkId,\n      polyClient,\n      tokens,\n      userAddress: currentWallet,\n    }});\n  }\n  catch(error) {\n    dispatch({ type: actions.CONNECTION_ERROR, payload: { error: error.message }})\n  }\n}\n\nasync function fetchShareholders(dispatch, st) {\n  let shareholders = await st.shareholders.getShareholders();\n  dispatch({ type: actions.SHAREHOLDERS_FETCHED });\n  dispatch({ type: actions.STORE_SHAREHOLDERS, payload: { shareholders }});\n}\n\nfunction Network({networkId}) {\n  networkId = networkId.toString();\n  const networks = {\n    0: 'Disconnected',\n    1: 'Mainnet',\n    42: 'Kovan'\n  }\n  return (\n    <Fragment>\n      <Icon type=\"global\" style={{ marginRight: 10, marginLeft: 20 }} />\n      <Typography.Text>{networks[networkId]}</Typography.Text>\n    </Fragment>\n  );\n}\n\nfunction User({userAddress}) {\n  if (userAddress)\n    return (\n      <Fragment>\n        <Icon type=\"user\"  style={{ marginRight: 5, marginLeft: 10 }}/>\n        <Typography.Text>{userAddress}</Typography.Text>\n      </Fragment>\n    );\n  return null;\n}\n\nfunction App() {\n  const [state, dispatch] = useReducer(reducer, init(), init);\n  const  { shareholders, tokens, tokenIndex, fetching, tip, userAddress, connecting, error, networkId } = state;\n \n  useEffect(() => {\n    connect(dispatch);\n  }, []);\n\n  useEffect(() => {\n    if (tokenIndex !== undefined \n    ) {\n      fetchShareholders(dispatch, tokens[tokenIndex]);\n      // @TODO remove this\n      global.token = tokens[tokenIndex];\n    }\n  }, [tokens, tokenIndex]);\n\n  async function modifyWhitelist(shareholders) {\n    const queue = await tokens[tokenIndex].shareholders.modifyData({shareholderData: shareholders});\n    await queue.run();\n    dispatch({type: actions.STORE_SHAREHOLDERS, payload: {shareholders}});\n  }\n\n  async function deleteShareholders(shareholders) {\n    shareholders = shareholders.map(shareholder => ({\n      address: shareholder.address,\n      canReceiveAfter: 0,\n      canSendAfter: 0,\n      kycExpiry: 0,\n      isAccredited: 0,\n      canBuyFromSto: 0\n    }));\n\n    const queue = await tokens[tokenIndex].shareholders.modifyData({shareholderData: shareholders});\n    await queue.run();\n    await fetchShareholders(dispatch, tokens[tokenIndex]);\n  }\n\n  function generateTokensSelectOptions() {\n    const options = !tokens ? [] : tokens.map((token, i) => \n      <Option value={i} key={i}>{token.symbol}</Option>)\n    return options\n  }\n\n  return (\n    <div className=\"App\">\n      <Spin spinning={fetching || connecting} tip={tip} size=\"large\">\n        <Layout>\n          <Header style={{backgroundColor: 'white', display: 'flex', flexDirection: 'row', justifyContent: 'flex-end', alignItems: 'center'}}>\n            <Network networkId={networkId} />\n            <User userAddress={userAddress} />\n          </Header>\n          <Content style={{ padding: 50, backgroundColor: '#FAFDFF' }}>\n            { error && <Alert\n              message={error}\n              type=\"error\"\n            />}\n            { userAddress &&\n              <div style={{display: 'flex', flexDirection: 'column', width: 250, justifyContent: 'flex-start'}}>\n                <Typography.Title level={3}>Please Select a Token</Typography.Title>\n                <Typography.Text style={{paddingTop: 20, paddingBottom: 20, width: '100%'}}>Once you select a token, you will be able to manage investors white-list by adding, editing or removing investors.</Typography.Text>\n                <Select\n                  autoFocus\n                  showSearch\n                  style={{ width: '100%', marginBottom: 40 }}\n                  placeholder=\"Select a token\"\n                  optionFilterProp=\"children\"\n                  onChange={(index) => dispatch({ type: actions.TOKEN_SELECTED, payload: { tokenIndex: index }})}\n                  filterOption={(input, option) =>\n                    option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                  }\n                >\n                  {generateTokensSelectOptions()}\n                </Select>\n              </div>\n            }\n            { tokenIndex !== undefined && \n              <Whitelist\n                modifyWhitelist={modifyWhitelist}\n                deleteShareholders={deleteShareholders}\n                shareholders={shareholders}\n              />\n            }\n          </Content>\n        </Layout>\n      </Spin>\n    </div>\n  );\n}\n\nexport default App;\n","import React, { Fragment } from 'react';\nimport moment from 'moment';\nimport { utils as web3Utils } from 'web3';\nimport { Table, Button, Form, Input, DatePicker, Checkbox, Modal, Typography, Spin, Icon, message } from 'antd';\n\nconst {Column} = Table;\nconst {Item} = Form;\nconst {Text} = Typography;\n\nconst formItemLayout = {\n  labelCol: {\n    xs: { span: 24 },\n    sm: { span: 8 },\n  },\n  wrapperCol: {\n    xs: { span: 24 },\n    sm: { span: 16 },\n  },\n};\n\nfunction formatDate(input) {\n  return moment(input).format('YYYY-MM-DD');\n}\n\nfunction formatBool(input) {\n  return input ? \n    <Fragment><Icon style={{color: '#00AA5E'}} type=\"check-circle\" theme=\"filled\"/><span>   Yes</span></Fragment> :\n    <Fragment><Icon style={{color: '#DB2C3E'}} type=\"close-circle\" theme=\"filled\"/><span>   No</span></Fragment>;\n}\n\nconst defaultShareholderValues = {\n  address: '',\n  canSendAfter: moment().add(1, 'hour'),\n  canReceiveAfter: moment().add(1, 'hour'),\n  kycExpiry: moment().add(1, 'year'),\n  canBuyFromSto: true,\n  isAccredited: false\n}\n\nconst WhitelistForm = Form.create({ name: 'form_in_modal' })(\n  class extends React.Component {\n\n    render() {\n      const { visible,\n        onCancel,\n        onOk, form,\n        awaitingConfirmation,\n        editedRecord,\n        shareholderExists\n      } = this.props;\n      let defaultValues = editedRecord || defaultShareholderValues;\n            \n      const { getFieldDecorator } = form;\n      return ( \n        <Modal\n          title={editedRecord ? \"Edit shareholder\" : \"Add a new shareholder\"}\n          okText=\"Save\"\n          visible={visible}\n          onCancel={onCancel}\n          onOk={onOk}\n          confirmLoading={awaitingConfirmation}\n        >\n          <Spin spinning={awaitingConfirmation} size=\"large\">\n            <Form {...formItemLayout}>\n              <Item name=\"address\" label=\"Address\">\n                {getFieldDecorator('address', {\n                  rules: [\n                    { required: true  },\n                    {\n                      validator: (rule, value, callback) => {\n                        if (!editedRecord && !web3Utils.isAddress(value)) {\n                          callback('Address is invalid')\n                          return;\n                        }\n                        callback()\n                        return;\n                      }\n                    },\n                    {\n                      validator: (rule, value, callback) => {\n                        if (!editedRecord && shareholderExists(value)) {\n                          callback('Shareholder is already present in the whitelist')\n                          return;\n                        }\n                        callback()\n                        return;\n                      }\n                    }\n                  ],\n                  initialValue: defaultValues.address\n                })(\n                  <Input disabled={!!editedRecord}/>\n                )}\n              </Item>\n              <Item name=\"canSendAfter\"  label=\"Can Send after\">\n                {getFieldDecorator('canSendAfter', {\n                  rules: [{ required: true }],\n                  initialValue: defaultValues.canSendAfter\n                })(\n                  <DatePicker />\n                )}\n              </Item>\n              <Item name=\"canReceiveAfter\" label=\"Can Receive adter\">\n                {getFieldDecorator('canReceiveAfter', {\n                  rules: [{ required: true }],\n                  initialValue: defaultValues.canReceiveAfter\n                })(\n                  <DatePicker />\n                )}\n              </Item>\n              <Item name=\"kycExpiry\" label=\"KYC Expiry\">\n                {getFieldDecorator('kycExpiry', {\n                  rules: [{ required: true }],\n                  initialValue: defaultValues.kycExpiry\n                })(\n                  <DatePicker />\n                )}\n              </Item>\n              <Item name=\"canBuyFromSto\" label=\"Can Buy from STO\">\n                {getFieldDecorator('canBuyFromSto', {\n                  valuePropName: 'checked',\n                  initialValue: defaultValues.canBuyFromSto\n                })(\n                  <Checkbox/>\n                )}\n              </Item>\n              <Item name=\"isAccredited\" label=\"Accredited\">\n                {getFieldDecorator('isAccredited', {\n                  valuePropName: 'checked',\n                  initialValue: defaultValues.isAccredited\n                })(\n                  <Checkbox />\n                )}\n              </Item>\n            </Form>\n          </Spin>\n        </Modal>\n      )}\n  }\n);\n\nexport default class Whitelist extends React.Component {\n    state = {\n      editIndex: '',\n      visible: false,\n      awaitingConfirmation: false,\n    }\n\n    closeForm = () => {\n      this.setState({\n        editIndex: '',\n        visible: false,\n        awaitingConfirmation: false\n      });\n      const { form } = this.formRef.props;\n      form.resetFields();\n    }\n\n    openForm = (index = '') => {\n      this.setState({\n        visible: true,\n        editIndex: index\n      });\n    }\n\n    submitForm = async () => {\n      const { form } = this.formRef.props;\n      const { modifyWhitelist } = this.props;\n      form.validateFields(async (err, values) => {\n        if (err) {\n          return;\n        }\n\n        this.setState({ awaitingConfirmation: true })\n        \n        values.canSendAfter = values.canSendAfter.toDate();\n        values.canReceiveAfter = values.canReceiveAfter.toDate();\n        values.kycExpiry = values.kycExpiry.toDate();\n\n        try {\n          await modifyWhitelist([values]);\n          this.setState({\n            visible: false,\n            awaitingConfirmation: false,\n            editIndex: ''\n          });\n          form.resetFields();\n        }\n        catch (error) {\n          this.setState({\n            awaitingConfirmation: false,\n          });\n          message.error(error.message)\n        }\n      });\n    };\n\n    saveFormRef = formRef => {\n      this.formRef = formRef;\n    };\n\n    shareholderExists = (address) => {\n      const { shareholders } = this.props\n      const ret =  shareholders.find((element) => element.address.toUpperCase() === address.toUpperCase())\n         !== undefined\n      return ret\n    }\n    \n    render() {\n      const { visible, awaitingConfirmation, editIndex } = this.state;\n        \n      const { shareholders, deleteShareholders } = this.props;\n      let editedRecord = shareholders.filter(shareholder => shareholder.address === editIndex)[0]\n\n      return <div style={{display: 'flex', flexDirection: 'column'}}>\n        <Button type=\"primary\" style={{marginBottom: 20, alignSelf: 'flex-end'}} onClick={() => this.openForm()}>Add new</Button>\n        <Table dataSource={shareholders} rowKey=\"address\">\n          <Column\n            title='Address'\n            dataIndex='address'\n            key='address'\n            render={(text) => <Text>{web3Utils.toChecksumAddress(text)}</Text>}\n          />\n          <Column\n            title='Can send after'\n            dataIndex='canSendAfter'\n            key='canSendAfter'\n            render={(text) => formatDate(text)}\n          />\n          <Column\n            title='Can receive after'\n            dataIndex='canReceiveAfter'\n            key='canReceiveAfter'\n            render={(text) => formatDate(text)}\n          />\n          <Column\n            title='KYC expiry'\n            dataIndex='kycExpiry'\n            key='kycExpiry'\n            render={(text) => formatDate(text)}\n          />\n          <Column\n            title='Can buy from STO'\n            dataIndex='canBuyFromSto'\n            key='canBuyFromSto'\n            render={(text) => formatBool(text)}\n          />\n          <Column\n            title='Is accredited'\n            dataIndex='isAccredited'\n            key='isAccredited'\n            render={(text) => formatBool(text)}\n          />\n          <Column render={(text, record) => {\n            return (\n              <Fragment>\n                <Button onClick={() => this.openForm(record.address)}>\n                  <Icon type=\"edit\" theme=\"filled\" />\n                </Button>\n                {/* <Button onClick={() => deleteShareholders([record])}>\n                                <Icon type=\"delete\" theme=\"filled\" />\n                            </Button> */}\n              </Fragment>\n            )\n          }}/>\n        </Table>\n        <WhitelistForm \n          wrappedComponentRef={this.saveFormRef}\n          visible={visible}\n          onCancel={this.closeForm}\n          onOk={this.submitForm}\n          awaitingConfirmation={awaitingConfirmation}\n          editedRecord={editedRecord}\n          shareholderExists={this.shareholderExists}\n        />\n      </div>;\n    }\n}","export const networkConfigs = {\n  1: {\n    polymathRegistryAddress: '0xdfabf3e4793cd30affb47ab6fa4cf4eef26bbc27'\n  },\n  42: {\n    polymathRegistryAddress: '0x5b215a7d39ee305ad28da29bf2f0425c6c2a00b3'\n  },\n};","export default {\n  CONNECTING: 'connecting',\n  CONNECTED: 'connected',\n  CONNECTION_ERROR: 'connection_error',\n  RESET: 'reset',\n  ERROR: 'error',\n  SHAREHOLDERS_FETCHED: 'shareholders_fetched',\n  STORE_SHAREHOLDERS: 'store_shareholders',\n  TOKEN_SELECTED: 'token_selected',\n}","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 984;"],"sourceRoot":""}